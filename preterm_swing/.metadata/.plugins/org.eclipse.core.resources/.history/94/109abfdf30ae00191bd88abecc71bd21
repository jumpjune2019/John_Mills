package matrixinput;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;

public class DriverGui{

	JFrame frm;
	
	//need to figure out how to put this on the left
	//side of the GUI. Figure out functionality later
	MyList jlstHolder;
	JScrollPane scroller;
	Client[] myList;
	JPanel gridPanel;
	
	
	//Only need to add a text label to this
	//at the top
	JLabel top;
	AddOrRemovePanel bottom;
	
	/*
	 * TODO
	 * This is going to be a bitch. Create a grid with
	 * id: 01/JM or "vacant" on top with a button that
	 * says book or unbook depending on availability
	 * already started with class MyCells to make this happen
	 */
	JPanel grid;
	
	/*
	 * TODO
	 * Need to create another JPanel with a BorderLayout
	 * EAST will hold row letters.
	 * NORTH will hold Seat Numbers
	 * CENTER will probably hold the gridlayout
	 */
	
	
	public DriverGui(Client[] myList) {
		//frm = new JFrame("Big matrices go uWu");
		this.myList = myList;
		prepareGUI();
	}
	
	
	private void prepareGUI() {
		
		frm = new JFrame("Big matrices go uWu");
		
		//TODO
		//this is a placeholder until i know
		//what size this needs to be
		frm.setSize(1100, 800);
		frm.setLocationRelativeTo(null);
		frm.setLayout(new BorderLayout());
		
		//creating gridpanel of size 10 x 10
		//and adds cells to gridpanel
		gridPanel = new JPanel(new GridLayout(10, 10));
		for(int i=0; i < 10; i++) {
			for(int j=0; j < 10; j++) {
				gridPanel.add(new MyCell(i, j));
			}
		}
		
		//sets the label to top center in conjunction
		//with frm.add(top, BorderLayout.NORTH);
		top = new JLabel("2nd Matrix Demo");
		top.setHorizontalAlignment(JLabel.CENTER);
		top.setVerticalAlignment(JLabel.CENTER);
		
		
	
		//setting list in jframe
		jlstHolder = new MyList(myList);
		scroller = new JScrollPane(jlstHolder.getJList());
		scroller.setPreferredSize(new Dimension(120, 90));
		
		
		//adding bottom panel with the 2 buttons in it
		bottom = new AddOrRemovePanel(jlstHolder);
		
		//adding components to frame
		frm.add(bottom, BorderLayout.SOUTH);					//sets my button panel to bottom of screen
		frm.add(scroller, BorderLayout.WEST);					//sets scroller to left side of screen
		frm.add(top, BorderLayout.NORTH);						//sets "top" to the top center of screen along with alignments
		frm.add(gridPanel, BorderLayout.CENTER);
		frm.setVisible(true);
		

		//kills program after gui is exited
		frm.addWindowListener(new WindowAdapter() {
	         public void windowClosing(WindowEvent windowEvent){
	        	 System.exit(0);
	         }        
	      }); 
		
	}//end prepareGUI
	
}//end class MyGrid